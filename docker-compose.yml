version: '3.8'

# ============================================================
# PROJECT ISOLATION: This project is completely isolated
# Project name: neurocore (distinct from other projects)
# All containers, volumes, and networks are uniquely named
# ============================================================

name: neurocore

services:
  # PostgreSQL 15 with pgvector extension
  postgres:
    image: ankane/pgvector:v0.5.1
    container_name: neurocore-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-neurosurgery_kb}
      POSTGRES_USER: ${DB_USER:-nsurg_admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "-E UTF8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/migrations:/docker-entrypoint-initdb.d
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-nsurg_admin} -d ${DB_NAME:-neurosurgery_kb}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - neurosurgery-network

  # Redis 7 for hybrid smart caching
  redis:
    image: redis:7-alpine
    container_name: neurocore-redis
    command: >
      redis-server
      --appendonly yes
      --maxmemory 2gb
      --maxmemory-policy allkeys-lru
      --save 60 1000
      --save 300 100
      --save 900 10
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - neurosurgery-network

  # FastAPI Backend
  api:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.backend
    container_name: neurocore-api
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-neurosurgery_kb}
      - DB_USER=${DB_USER:-nsurg_admin}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ALGORITHM=${JWT_ALGORITHM:-HS256}
      - JWT_EXPIRY_HOURS=${JWT_EXPIRY_HOURS:-24}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./backend:/app/backend
      - ./.env:/app/.env
      - pdf_storage:/data/pdfs
      - image_storage:/data/images
    ports:
      - "${API_PORT:-8000}:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - neurosurgery-network
    restart: unless-stopped

  # Celery Worker for default queue
  celery-worker:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.backend
    container_name: neurocore-celery-worker
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-neurosurgery_kb}
      - DB_USER=${DB_USER:-nsurg_admin}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./backend:/app/backend
      - ./.env:/app/.env
      - pdf_storage:/data/pdfs
      - image_storage:/data/images
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A backend.services.celery_app worker --loglevel=info --queues=default --concurrency=2
    networks:
      - neurosurgery-network
    restart: unless-stopped

  # Celery Worker for image analysis queue
  celery-worker-images:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.backend
    container_name: neurocore-celery-worker-images
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-neurosurgery_kb}
      - DB_USER=${DB_USER:-nsurg_admin}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./backend:/app/backend
      - ./.env:/app/.env
      - pdf_storage:/data/pdfs
      - image_storage:/data/images
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A backend.services.celery_app worker --loglevel=info --queues=images --concurrency=2
    networks:
      - neurosurgery-network
    restart: unless-stopped

  # Celery Worker for embeddings queue
  celery-worker-embeddings:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.backend
    container_name: neurocore-celery-worker-embeddings
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-neurosurgery_kb}
      - DB_USER=${DB_USER:-nsurg_admin}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./backend:/app/backend
      - ./.env:/app/.env
      - pdf_storage:/data/pdfs
      - image_storage:/data/images
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A backend.services.celery_app worker --loglevel=info --queues=embeddings --concurrency=1
    networks:
      - neurosurgery-network
    restart: unless-stopped

  # Celery Flower for monitoring (optional, can comment out)
  celery-flower:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.backend
    container_name: neurocore-celery-flower
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "${FLOWER_PORT:-5555}:5555"
    depends_on:
      - redis
      - celery-worker
    command: celery -A backend.services.celery_app flower --port=5555
    networks:
      - neurosurgery-network
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.frontend
    container_name: neurocore-frontend
    environment:
      - VITE_API_URL=${API_URL:-http://localhost:8002}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    depends_on:
      - api
    command: npm run dev -- --host 0.0.0.0 --port 3000
    networks:
      - neurosurgery-network
    restart: unless-stopped

volumes:
  postgres_data:
    name: neurocore-postgres-data
  redis_data:
    name: neurocore-redis-data
  pdf_storage:
    name: neurocore-pdf-storage
  image_storage:
    name: neurocore-image-storage

networks:
  neurosurgery-network:
    name: neurocore-network
    driver: bridge
