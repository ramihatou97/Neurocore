# =============================================================================
# Production-Grade Frontend Dockerfile
# Multi-stage build: Build assets then serve with Nginx
# =============================================================================

# -----------------------------------------------------------------------------
# Stage 1: Builder - Build React application
# -----------------------------------------------------------------------------
FROM node:22-alpine AS builder

# Set working directory
WORKDIR /build

# Copy package files
COPY frontend/package*.json ./

# Install dependencies with clean install for reproducible builds
RUN npm ci --only=production --no-audit --no-fund

# Copy frontend source code
COPY frontend/ ./

# Build production assets
# This creates optimized, minified, and bundled files in /build/dist
ARG VITE_API_URL=http://localhost:8002
ENV VITE_API_URL=${VITE_API_URL}

RUN npm run build && \
    # Verify build output
    ls -la dist/ && \
    # Remove source maps in production (optional, comment out to keep them)
    find dist/ -name "*.map" -type f -delete

# -----------------------------------------------------------------------------
# Stage 2: Runtime - Serve with Nginx
# -----------------------------------------------------------------------------
FROM nginx:1.25-alpine AS runtime

# Set metadata
LABEL maintainer="Neurosurgery KB Team"
LABEL description="Production React frontend for Neurosurgery Knowledge Base"
LABEL version="1.0.0"

# Install curl for health checks
RUN apk add --no-cache curl

# Remove default nginx configuration
RUN rm /etc/nginx/conf.d/default.conf

# Copy custom nginx configuration
COPY docker/nginx.conf /etc/nginx/conf.d/neurosurgery-kb.conf

# Copy built assets from builder stage
COPY --from=builder /build/dist /usr/share/nginx/html

# Create non-root user (nginx already has this, but we'll be explicit)
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chmod -R 755 /usr/share/nginx/html

# Create nginx pid directory
RUN touch /var/run/nginx.pid && \
    chown -R nginx:nginx /var/run/nginx.pid

# Switch to non-root user
USER nginx

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:3000/ || exit 1

# Start nginx in foreground
CMD ["nginx", "-g", "daemon off;"]
