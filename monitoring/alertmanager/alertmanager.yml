# AlertManager Configuration for Alert Routing
# Routes alerts to appropriate notification channels

global:
  # The smarthost and SMTP sender used for mail notifications
  smtp_smarthost: 'smtp.gmail.com:587'
  smtp_from: 'alerts@neurosurgery-kb.com'
  smtp_auth_username: 'alerts@neurosurgery-kb.com'
  smtp_auth_password: '${SMTP_PASSWORD}'
  smtp_require_tls: true

  # Slack webhook URL (set via environment variable)
  slack_api_url: '${SLACK_WEBHOOK_URL}'

  # Default resolution timeout
  resolve_timeout: 5m

# Templates for notifications
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# Route configuration
route:
  # Default receiver
  receiver: 'default'

  # Group alerts by these labels
  group_by: ['alertname', 'cluster', 'service']

  # How long to wait before sending initial notification
  group_wait: 10s

  # How long to wait before sending notification about new alerts
  group_interval: 10s

  # How long to wait before re-sending notification
  repeat_interval: 12h

  # Child routes
  routes:
    # Critical alerts - immediate notification
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 10s
      repeat_interval: 1h

    # Database alerts
    - match:
        service: postgres
      receiver: 'database-team'
      group_wait: 30s
      repeat_interval: 4h

    # API alerts
    - match:
        service: api
      receiver: 'backend-team'
      group_wait: 30s
      repeat_interval: 4h

    # Infrastructure alerts
    - match:
        service: system
      receiver: 'devops-team'
      group_wait: 1m
      repeat_interval: 6h

    # Cache alerts (less critical)
    - match:
        service: redis
      receiver: 'backend-team'
      group_wait: 2m
      repeat_interval: 8h
      continue: false

# Inhibition rules - suppress certain alerts when others are firing
inhibit_rules:
  # Suppress warning if critical alert is firing
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'cluster', 'service']

  # Suppress container alerts if host is down
  - source_match:
      alertname: 'HostDown'
    target_match_re:
      alertname: 'Container.*'
    equal: ['instance']

# Receivers configuration
receivers:
  # ==================== Default Receiver ====================
  - name: 'default'
    slack_configs:
      - channel: '#alerts'
        title: 'Alert: {{ .GroupLabels.alertname }}'
        text: |
          *Summary:* {{ .CommonAnnotations.summary }}
          *Description:* {{ .CommonAnnotations.description }}
          *Severity:* {{ .CommonLabels.severity }}
          *Service:* {{ .CommonLabels.service }}
        send_resolved: true

  # ==================== Critical Alerts ====================
  - name: 'critical-alerts'
    slack_configs:
      - channel: '#critical-alerts'
        color: 'danger'
        title: 'ðŸš¨ CRITICAL: {{ .GroupLabels.alertname }}'
        text: |
          *Summary:* {{ .CommonAnnotations.summary }}
          *Description:* {{ .CommonAnnotations.description }}
          *Service:* {{ .CommonLabels.service }}
          *Time:* {{ .StartsAt.Format "2006-01-02 15:04:05" }}
        send_resolved: true

    email_configs:
      - to: 'oncall@neurosurgery-kb.com'
        headers:
          Subject: '[CRITICAL] {{ .GroupLabels.alertname }}'
        html: |
          <h2>ðŸš¨ Critical Alert</h2>
          <p><strong>Alert:</strong> {{ .GroupLabels.alertname }}</p>
          <p><strong>Summary:</strong> {{ .CommonAnnotations.summary }}</p>
          <p><strong>Description:</strong> {{ .CommonAnnotations.description }}</p>
          <p><strong>Service:</strong> {{ .CommonLabels.service }}</p>
          <p><strong>Severity:</strong> {{ .CommonLabels.severity }}</p>
          <p><strong>Started:</strong> {{ .StartsAt.Format "2006-01-02 15:04:05" }}</p>

    # Optional: PagerDuty integration
    # pagerduty_configs:
    #   - service_key: '${PAGERDUTY_SERVICE_KEY}'
    #     description: '{{ .CommonAnnotations.summary }}'
    #     severity: 'critical'

  # ==================== Database Team ====================
  - name: 'database-team'
    slack_configs:
      - channel: '#database-alerts'
        title: 'Database Alert: {{ .GroupLabels.alertname }}'
        text: |
          *Summary:* {{ .CommonAnnotations.summary }}
          *Description:* {{ .CommonAnnotations.description }}
          *Severity:* {{ .CommonLabels.severity }}
        send_resolved: true

    email_configs:
      - to: 'database-team@neurosurgery-kb.com'
        headers:
          Subject: '[{{ .CommonLabels.severity | toUpper }}] Database: {{ .GroupLabels.alertname }}'

  # ==================== Backend Team ====================
  - name: 'backend-team'
    slack_configs:
      - channel: '#backend-alerts'
        title: 'Backend Alert: {{ .GroupLabels.alertname }}'
        text: |
          *Summary:* {{ .CommonAnnotations.summary }}
          *Description:* {{ .CommonAnnotations.description }}
          *Severity:* {{ .CommonLabels.severity }}
        send_resolved: true

    email_configs:
      - to: 'backend-team@neurosurgery-kb.com'
        headers:
          Subject: '[{{ .CommonLabels.severity | toUpper }}] Backend: {{ .GroupLabels.alertname }}'

  # ==================== DevOps Team ====================
  - name: 'devops-team'
    slack_configs:
      - channel: '#devops-alerts'
        title: 'Infrastructure Alert: {{ .GroupLabels.alertname }}'
        text: |
          *Summary:* {{ .CommonAnnotations.summary }}
          *Description:* {{ .CommonAnnotations.description }}
          *Severity:* {{ .CommonLabels.severity }}
          *Instance:* {{ .CommonLabels.instance }}
        send_resolved: true

    email_configs:
      - to: 'devops@neurosurgery-kb.com'
        headers:
          Subject: '[{{ .CommonLabels.severity | toUpper }}] Infrastructure: {{ .GroupLabels.alertname }}'

  # ==================== Webhook Receiver (for custom integrations) ====================
  # - name: 'webhook'
  #   webhook_configs:
  #     - url: 'http://your-webhook-endpoint.com/alerts'
  #       send_resolved: true
  #       http_config:
  #         basic_auth:
  #           username: 'webhook_user'
  #           password: '${WEBHOOK_PASSWORD}'

  # ==================== Discord Receiver ====================
  # - name: 'discord'
  #   discord_configs:
  #     - webhook_url: '${DISCORD_WEBHOOK_URL}'
  #       title: 'Alert: {{ .GroupLabels.alertname }}'
  #       message: |
  #         **Summary:** {{ .CommonAnnotations.summary }}
  #         **Description:** {{ .CommonAnnotations.description }}
  #         **Severity:** {{ .CommonLabels.severity }}
